name: Tests

on:
  push:
  #  branches:
  #  - main
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        version: [0.1.15973, latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup CircleCI
      uses: ./
      with:
        version: ${{ matrix.version }}

    - name: Capture CircleCI CLI version installed
      run: |
        export CIRCLECI_CLI_VERSION=$( circleci version )
        echo 'CIRCLECI_CLI_VERSION_INSTALLED<<EOF' >> $GITHUB_ENV
        circleci version >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Verify
      shell: python
      env:
        CIRCLECI_CLI_VERSION_EXPECTED: ${{ matrix.version }}
      run: |
        import sys, os, urllib.request
        version_expected = os.environ["CIRCLECI_CLI_VERSION_EXPECTED"]
        if version_expected == 'latest':
          version_expected = urllib.request.urlopen('https://github.com/CircleCI-Public/circleci-cli/releases/latest').url.split('tag/v')[1]

        sys.exit(
            int(not version_expected in os.environ["CIRCLECI_CLI_VERSION_INSTALLED"])
        )
    #- name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v3
    #  with:
    #    limit-access-to-actor: true
    #  if: ${{ failure() }}
